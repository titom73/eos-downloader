---
name: Coverage Badge

# Permissions required for this workflow
permissions:
  contents: write  # Needed to commit coverage badge

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual trigger

jobs:
  coverage:
    name: Generate Coverage Badge
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for better context

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"  # Use latest supported version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run tests with coverage
        run: |
          python -m pytest --cov=eos_downloader --cov-report=term-missing --cov-report=json --cov-branch tests/

      - name: Debug coverage file
        run: |
          echo "Checking if coverage.json exists..."
          ls -la coverage.json || echo "coverage.json not found"
          if [ -f coverage.json ]; then
            echo "Coverage file content:"
            cat coverage.json
          fi

      - name: Extract coverage percentage
        id: coverage
        run: |
          if [ -f coverage.json ]; then
            COVERAGE=$(python -c "import json; data=json.load(open('coverage.json')); print(data['totals']['percent_covered_display'] if 'totals' in data and 'percent_covered_display' in data['totals'] else '0')")
            echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
            echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
            echo "Coverage: $COVERAGE%"
          else
            echo "coverage.json not found, setting coverage to 0"
            echo "percentage=0" >> $GITHUB_OUTPUT
            echo "COVERAGE=0" >> $GITHUB_ENV
          fi

      - name: Update Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: ${{ secrets.GIST_ID }}
          filename: eos-downloader-coverage.json
          label: coverage
          message: ${{ steps.coverage.outputs.percentage }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ steps.coverage.outputs.percentage }}

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.json
            .coverage
          retention-days: 30

      - name: Comment coverage on commit
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const coverage = '${{ steps.coverage.outputs.percentage }}';
            const message = `## ðŸ“Š Test Coverage Report

            **Coverage**: ${coverage}%

            View the full report in the workflow artifacts.
            `;

            // Find the commit SHA
            const sha = context.sha;

            // Get repository info
            const { owner, repo } = context.repo;

            console.log(`Coverage: ${coverage}%`);
