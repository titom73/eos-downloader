---
name: "Tag & Release management"
on:
  push:
    tags:
    - 'v*.*.*'
jobs:
  pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/eos-downloader
    permissions:
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build

    - name: Build package
      run: |
        python -m build

    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

  docker:
    name: Docker Image Build
    runs-on: ubuntu-latest
    needs: [ pypi ]
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Docker meta for TAG
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_IMAGE }}
          ghcr.io/${{ secrets.DOCKER_IMAGE }}
        tags: |
          type=semver,pattern={{raw}}
          type=raw,value=latest

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  docker_in_docker:
    name: Docker Image Build with Docker support
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Docker meta for TAG
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKER_IMAGE }}
          ghcr.io/${{ secrets.DOCKER_IMAGE }}
        tags: |
          type=semver,pattern={{raw}}-dind
          type=raw,value=latest-dind

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        file: Dockerfile.docker
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # Documentation deployment is now handled by the deploy-docs.yml workflow
  # which is triggered automatically on tag push
  trigger-docs-deployment:
    name: "Trigger documentation deployment"
    runs-on: ubuntu-latest
    needs: [ docker_in_docker ]
    steps:
    - name: Documentation deployment info
      run: |
        echo "üìö Documentation deployment will be handled by the deploy-docs workflow"
        echo "üè∑Ô∏è  Tag: ${{ github.ref_name }}"
        echo "üîó The documentation will be deployed automatically as version ${{ github.ref_name }} with alias 'stable'"
